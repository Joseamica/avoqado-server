version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: avoqado-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: avoqado_db
      POSTGRES_USER: avoqado_user
      POSTGRES_PASSWORD: avoqado_password
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U avoqado_user -d avoqado_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: avoqado-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: avoqado-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: avoqado_user
      RABBITMQ_DEFAULT_PASS: avoqado_password
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Avoqado Server Application
  app:
    build:
      context: .
      target: production
    container_name: avoqado-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://avoqado_user:avoqado_password@postgres:5432/avoqado_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://avoqado_user:avoqado_password@rabbitmq:5672
      JWT_SECRET: your_jwt_secret_here
      SESSION_SECRET: your_session_secret_here
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development version (optional)
  app-dev:
    build:
      context: .
      target: development
    container_name: avoqado-server-dev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://avoqado_user:avoqado_password@postgres:5432/avoqado_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://avoqado_user:avoqado_password@rabbitmq:5672
      JWT_SECRET: dev_jwt_secret
      SESSION_SECRET: dev_session_secret
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  default:
    name: avoqado-network